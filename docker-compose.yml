version: '3.9'

services:
  db:
    image: mysql:8.0
    restart: always
    container_name: db
    environment:
      MYSQL_DATABASE: sepsis_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant
    restart: always
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    restart: always

  minio_mc:
    image: minio/mc
    container_name: minio_mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 minioadmin minioadmin;
      mc mb -p local/protocols;
      mc mb -p local/patient-documents;
      exit 0;
      "
    restart: "no"

  redis:
    image: redis:7
    restart: always
    container_name: redis
    ports:
      - "6379:6379"

  django:
    build: .
    container_name: django
    command: >
      sh -c "./wait-for-it.sh db:3306 --timeout=60 --
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      qdrant:
        condition: service_started
    environment:
      DJANGO_DB_HOST: db
      DJANGO_DB_NAME: sepsis_db
      DJANGO_DB_USER: user
      DJANGO_DB_PASSWORD: password

  worker:
    build: .
    container_name: celery_worker
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - qdrant
      - django
    environment:
      DJANGO_DB_HOST: db
      DJANGO_DB_NAME: sepsis_db
      DJANGO_DB_USER: user
      DJANGO_DB_PASSWORD: password

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    entrypoint: >
      bash -c "ollama serve & sleep 5 && ollama pull llama3 && wait"
  
  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - static_volume:/app/staticfiles
    depends_on:
      - django


volumes:
  db_data:
  qdrant_data:
  minio_data:
  ollama_data:
  static_volume:
